/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "qldh/mypayslips/Component-preload",
	"modules": {
		"qldh/mypayslips/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\"qldh/mypayslips/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/routing/History\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/GroupHeaderListItem\",\n\t\"sap/ui/Device\",\n\t\"qldh/mypayslips/model/formatter\",\n\t\"qldh/mypayslips/model/grouper\",\n\t\"qldh/mypayslips/model/GroupSortState\"\n], function(BaseController, JSONModel, History, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, grouper, GroupSortState) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"qldh.mypayslips.controller.Master\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\t// Control state model\n\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t// taken care of by the master list itself.\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\n\t\t\tthis._oGroupSortState = new GroupSortState(oViewModel, grouper.groupUnitNumber(this.getResourceBundle()));\n\n\t\t\tthis._oList = oList;\n\t\t\t// keeps the filter and search state\n\t\t\tthis._oListFilterState = {\n\t\t\t\taFilter: [],\n\t\t\t\taSearch: []\n\t\t\t};\n\n\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t});\n\n\t\t\tthis.getView().addEventDelegate({\n\t\t\t\tonBeforeFirstShow: function() {\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\n\t\t\t\t}.bind(this)\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * After list data is available, this handler method updates the\n\t\t * master list counter and hides the pull to refresh control, if\n\t\t * necessary.\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t * @public\n\t\t */\n\t\tonUpdateFinished: function(oEvent) {\n\t\t\t// update the master list object counter after new data is loaded\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t// hide pull to refresh if necessary\n\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the master search field. Applies current\n\t\t * filter value and triggers a new search. If the search field's\n\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t * and the list binding is refresh instead.\n\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t * @public\n\t\t */\n\t\tonSearch: function(oEvent) {\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t// refresh the list binding.\n\t\t\t\tthis.onRefresh();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\tif (sQuery) {\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"PayDate\", FilterOperator.Contains, sQuery)];\n\t\t\t} else {\n\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t}\n\t\t\tthis._applyFilterSearch();\n\n\t\t},\n\n\t\t/**\n\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t * and group settings and refreshes the list binding.\n\t\t * @public\n\t\t */\n\t\tonRefresh: function() {\n\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the sorter selection.\n\t\t * @param {sap.ui.base.Event} oEvent the select event\n\t\t * @public\n\t\t */\n\t\tonSort: function(oEvent) {\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\n\n\t\t\tthis._applyGroupSort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the grouper selection.\n\t\t * @param {sap.ui.base.Event} oEvent the search field event\n\t\t * @public\n\t\t */\n\t\tonGroup: function(oEvent) {\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\taSorters = this._oGroupSortState.group(sKey);\n\n\t\t\tthis._applyGroupSort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the filter button to open the ViewSettingsDialog.\n\t\t * which is used to add or remove filters to the master list. This\n\t\t * handler method is also called when the filter bar is pressed,\n\t\t * which is added to the beginning of the master list when a filter is applied.\n\t\t * @public\n\t\t */\n\t\tonOpenViewSettings: function() {\n\t\t\tif (!this._oViewSettingsDialog) {\n\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(\"qldh.mypayslips.view.ViewSettingsDialog\", this);\n\t\t\t\tthis.getView().addDependent(this._oViewSettingsDialog);\n\t\t\t\t// forward compact/cozy style into Dialog\n\t\t\t\tthis._oViewSettingsDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\t\t\tthis._oViewSettingsDialog.open();\n\t\t},\n\n\t\t/**\n\t\t * Event handler called when ViewSettingsDialog has been confirmed, i.e.\n\t\t * has been closed with 'OK'. In the case, the currently chosen filters\n\t\t * are applied to the master list, which can also mean that the currently\n\t\t * applied filters are removed from the master list, in case the filter\n\t\t * settings are removed in the ViewSettingsDialog.\n\t\t * @param {sap.ui.base.Event} oEvent the confirm event\n\t\t * @public\n\t\t */\n\t\tonConfirmViewSettingsDialog: function(oEvent) {\n\t\t\tvar aFilterItems = oEvent.getParameters().filterItems,\n\t\t\t\taFilters = [],\n\t\t\t\taCaptions = [];\n\n\t\t\t// update filter state:\n\t\t\t// combine the filter array and the filter string\n\t\t\taFilterItems.forEach(function(oItem) {\n\t\t\t\tswitch (oItem.getKey()) {\n\t\t\t\t\tcase \"Filter1\":\n\t\t\t\t\t\taFilters.push(new Filter(\"NetPay\", FilterOperator.LE, 100));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Filter2\":\n\t\t\t\t\t\taFilters.push(new Filter(\"NetPay\", FilterOperator.GT, 100));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\taCaptions.push(oItem.getText());\n\t\t\t});\n\n\t\t\tthis._oListFilterState.aFilter = aFilters;\n\t\t\tthis._updateFilterBar(aCaptions.join(\", \"));\n\t\t\tthis._applyFilterSearch();\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the list selection event\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\n\t\t * @public\n\t\t */\n\t\tonSelectionChange: function(oEvent) {\n\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\n\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\n\t\t},\n\n\t\t/**\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\n\t\t * If there was an object selected in the master list, that selection is removed.\n\t\t * @public\n\t\t */\n\t\tonBypassed: function() {\n\t\t\tthis._oList.removeSelections(true);\n\t\t},\n\n\t\t/**\n\t\t * Used to create GroupHeaders with non-capitalized caption.\n\t\t * These headers are inserted into the master list to\n\t\t * group the master list's items.\n\t\t * @param {Object} oGroup group whose text is to be displayed\n\t\t * @public\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\n\t\t */\n\t\tcreateGroupHeader: function(oGroup) {\n\t\t\treturn new GroupHeaderListItem({\n\t\t\t\ttitle: oGroup.text,\n\t\t\t\tupperCase: false\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Event handler for navigating back.\n\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\n\t\t * If not, it will navigate to the shell home\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t_createViewModel: function() {\n\t\t\treturn new JSONModel({\n\t\t\t\tisFilterBarVisible: false,\n\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\tdelay: 0,\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\tsortBy: \"PayDate\",\n\t\t\t\tgroupBy: \"None\"\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * If the master route was hit (empty hash) we have to set\n\t\t * the hash to to the first item in the list as soon as the\n\t\t * listLoading is done and the first item in the list is known\n\t\t * @private\n\t\t */\n\t\t_onMasterMatched: function() {\n\t\t\t/*this.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\tfunction (mParams) {\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"PersAssignNum\");\n\t\t\t\t\tthis.getRouter().navTo(\"object\", {objectId : sObjectId}, true);\n\t\t\t\t}.bind(this),\n\t\t\t\tfunction (mParams) {\n\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t}.bind(this)\n\t\t\t);*/\n\n\t\t\tif (!(this.getView().byId(\"list\").getItems().length === 0)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.getPayPeriods([]);\n\n\t\t\tthis.getFilterDropdowns();\n\n\t\t},\n\n\t\t// Get Pay Periods\n\t\tgetPayPeriods: function(oFilters) {\n\n\t\t\tif (!this.locModel) {\n\t\t\t\tthis.locModel = new sap.ui.model.json.JSONModel();\n\t\t\t\tthis.locModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);\n\t\t\t\tthis.getView().setModel(this.locModel, \"localPSModel\");\n\t\t\t}\n\n\t\t\tvar oPath = \"/PayPeriodsSet\",\n\t\t\t\tthat = this;\n\n\t\t\tthis.getView().byId(\"list\").setBusy(true);\n\t\t\tthis.getView().byId(\"filter\").setEnabled(false);\n\n\t\t\tthis.getModel().read(oPath, {\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"$expand\": \"AmtSummary\" //,Leaves\"\n\t\t\t\t},\n\t\t\t\tfilters: oFilters,\n\t\t\t\tsorters: [new sap.ui.model.Sorter(\"PayDate\", true)],\n\t\t\t\tsuccess: function(oData, oResponse) {\n\n\t\t\t\t\tvar cnt = oData.results.length;\n\n\t\t\t\t\tfor (var i = 0; i < oData.results.length; i++) {\n\t\t\t\t\t\tcnt = cnt + oData.results[i].AmtSummary.results.length; // + oData.results[i].Leaves.results.length;\n\t\t\t\t\t\toData.results[i].PersAssignNum = oData.results[i].PersAssignNum.replace(/^0+/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tthat.onSetDataLocPSModel(oData, cnt, that);\n\n\t\t\t\t\tif (!Device.system.phone) {\n\t\t\t\t\t\tif (oData.results.length > 0) {\n\t\t\t\t\t\t\tthat.onShowFirstRec(oData.results[0], that);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.navigateToDetail({\n\t\t\t\t\t\t\t\tPersAssignNum: \" \",\n\t\t\t\t\t\t\t\tSeqNum: \" \"\n\t\t\t\t\t\t\t}, true, that);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthat.getView().byId(\"filter\").setEnabled(true);\n\n\t\t\t\t\tif (that.oPrevFilter) {\n\t\t\t\t\t\tthat.getView().byId(\"clearFilter\").setVisible(true);\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\tthat.getView().byId(\"list\").setBusy(false);\n\t\t\t\t\tthat.getView().byId(\"clearFilter\").setVisible(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t},\n\n\t\tgetFilterDropdowns: function() {\n\n\t\t\tif (!this.panModel) {\n\t\t\t\tthis.panModel = new sap.ui.model.json.JSONModel();\n\t\t\t\tthis.panModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);\n\t\t\t\tthis.getView().setModel(this.panModel, \"localPanModel\");\n\t\t\t}\n\n\t\t\tvar that = this;\n\n\t\t\tthis.getModel().read(\"/MyPersAssignNumSet\", {\n\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\tfor (var i = 0; i < oData.results.length; i++) {\n\t\t\t\t\t\toData.results[i].PersAssignNum = oData.results[i].PersAssignNum.replace(/^0+/, '');\n\t\t\t\t\t}\n\t\t\t\t\tthat.panModel.setData(oData);\n\t\t\t\t\tthat.panModel.refresh();\n\t\t\t\t\tthat.getView().byId(\"PAN\").setSelectedKey(oData.results[0].PersAssignNum);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!this.finYrModel) {\n\t\t\t\tthis.finYrModel = new sap.ui.model.json.JSONModel();\n\t\t\t\tthis.finYrModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);\n\t\t\t\tthis.getView().setModel(this.finYrModel, \"localFinYrModel\");\n\t\t\t}\n\n\t\t\tif (!this.payDtModel) {\n\t\t\t\tthis.payDtModel = new sap.ui.model.json.JSONModel();\n\t\t\t\tthis.payDtModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);\n\t\t\t\tthis.getView().setModel(this.payDtModel, \"localPayDtModel\");\n\t\t\t}\n\n\t\t\tthis.getModel().read(\"/FinancialYrSet\", {\n\t\t\t\turlParameters: {\n\t\t\t\t\t\"$expand\": \"PayDates\"\n\t\t\t\t},\n\t\t\t\tsorters: [new sap.ui.model.Sorter(\"FinYr\", true)],\n\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\tthat.finYrModel.setData(oData);\n\t\t\t\t\tthat.finYrModel.refresh();\n\t\t\t\t\tthat.getView().byId(\"FinancialYr\").setSelectedKey(oData.results[0].FinYr);\n\n\t\t\t\t\tthat.onPopulatePayDates(oData.results[0].PayDates, that);\n\t\t\t\t\tthat.getView().byId(\"PayDate\").setSelectedKey(\"\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t},\n\n\t\tonShowFirstRec: function(oData, that) {\n\t\t\tthat.navigateToDetail(oData, true, that);\n\t\t},\n\n\t\tnavigateToDetail: function(oPayslipRec, oReplace, that) {\n\n\t\t\tif (!sap.ui.getCore().AppContext) {\n\t\t\t\tsap.ui.getCore().AppContext = new Object();\n\t\t\t}\n\n\t\t\tif (!sap.ui.getCore().AppContext.oPaySummaryCache) {\n\t\t\t\tsap.ui.getCore().AppContext.oPayslipInfo = {};\n\t\t\t}\n\n\t\t\tsap.ui.getCore().AppContext.oPayslipInfo = oPayslipRec;\n\n\t\t\tthat.getRouter().navTo(\"object\", {\n\t\t\t\tpan: oPayslipRec.PersAssignNum,\n\t\t\t\tseqnum: oPayslipRec.SeqNum\n\t\t\t}, oReplace);\n\n\t\t},\n\n\t\tonSetDataLocPSModel: function(oData, oCnt, that) {\n\n\t\t\tthat.locModel.setSizeLimit(oCnt);\n\t\t\tthat.locModel.setData(oData);\n\t\t\tthat.locModel.refresh();\n\t\t\tthat.getView().byId(\"list\").setBusy(false);\n\t\t},\n\n\t\t/**\n\t\t * Shows the selected item on the detail page\n\t\t * On phones a additional history entry is created\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t * @private\n\t\t */\n\t\t_showDetail: function(oItem) {\n\t\t\t/*var bReplace = !Device.system.phone;\n\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\tpan : oItem.getBindingContext().getProperty(\"PersAssignNum\"),\n\t\t\t\tseqnum : oItem.getBindingContext().getProperty(\"SeqNum\")\n\t\t\t}, bReplace);*/\n\n\t\t\tvar bReplace = !Device.system.phone,\n\t\t\t\toPayslipRec = oItem.getBindingContext(\"localPSModel\").getObject();\n\n\t\t\tthis.navigateToDetail(oPayslipRec, bReplace, this);\n\t\t},\n\n\t\t/**\n\t\t * Sets the item count on the master list header\n\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t * @private\n\t\t */\n\t\t_updateListItemCount: function(iTotalItems) {\n\t\t\tvar sTitle;\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyFilterSearch: function() {\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (aFilters.length !== 0) {\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both group and sort state together on the list binding\n\t\t * @param {sap.ui.model.Sorter[]} aSorters an array of sorters\n\t\t * @private\n\t\t */\n\t\t_applyGroupSort: function(aSorters) {\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t * @param {string} sFilterBarText the selected filter value\n\t\t * @private\n\t\t */\n\t\t_updateFilterBar: function(sFilterBarText) {\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t},\n\n\t\tonOpenFilterPayslips: function() {\n\t\t\tthis.byId(\"DlgFilterPayslips\").setVisible(true);\n\t\t\tthis.byId(\"DlgFilterPayslips\").open();\n\t\t},\n\n\t\tonFiltOk: function() {\n\n\t\t\tvar oPan = this.getView().byId(\"PAN\").getSelectedKey(),\n\t\t\t\toFinYr = this.getView().byId(\"FinancialYr\").getSelectedKey(),\n\t\t\t\toPayDt = this.getView().byId(\"PayDate\").getSelectedKey();\n\n\t\t\tif (!this.oPrevFilter || !(oPan === this.oPrevFilter.oPan && oFinYr === this.oPrevFilter.oFinYr && oPayDt === this.oPrevFilter.oPayDt)) {\n\t\t\t\tvar oFilters = [];\n\t\t\t\toFilters.push(new sap.ui.model.Filter(\"PersAssignNum\", sap.ui.model.FilterOperator.EQ, oPan));\n\t\t\t\toFilters.push(new sap.ui.model.Filter(\"FinancialYr\", sap.ui.model.FilterOperator.EQ, oFinYr));\n\n\t\t\t\tif (oPayDt) {\n\t\t\t\t\toFilters.push(new sap.ui.model.Filter(\"PayDate\", sap.ui.model.FilterOperator.EQ, oPayDt));\n\t\t\t\t}\n\n\t\t\t\tthis.oPrevFilter = {};\n\t\t\t\tthis.oPrevFilter.oPan = oPan;\n\t\t\t\tthis.oPrevFilter.oFinYr = oFinYr;\n\t\t\t\tthis.oPrevFilter.oPayDt = oPayDt;\n\t\t\t\tthis.getView().byId(\"clearFilter\").setVisible(false);\n\t\t\t\tthis.getPayPeriods(oFilters);\n\t\t\t}\n\n\t\t\tthis.onFiltDlgClose();\n\t\t},\n\n\t\tonFiltCancel: function() {\n\t\t\tif (this.oPrevFilter) {\n\t\t\t\tthis.getView().byId(\"PAN\").setSelectedKey(this.oPrevFilter.oPan);\n\t\t\t\tthis.getView().byId(\"FinancialYr\").setSelectedKey(this.oPrevFilter.oFinYr);\n\t\t\t\tthis.onGetPayDatesForFinyr(this.oPrevFilter.oFinYr);\n\t\t\t\tthis.getView().byId(\"PayDate\").setSelectedKey(this.oPrevFilter.oPayDt);\n\t\t\t} else {\n\t\t\t\tthis.getView().byId(\"PAN\").setSelectedKey(this.panModel.getData().results[0].PersAssignNum);\n\t\t\t\tthis.getView().byId(\"FinancialYr\").setSelectedKey(this.finYrModel.getData().results[0].FinYr);\n\t\t\t\tthis.onGetPayDatesForFinyr(this.finYrModel.getData().results[0].FinYr);\n\t\t\t\tthis.getView().byId(\"PayDate\").setSelectedKey(\"\");\n\t\t\t}\n\n\t\t\tthis.onFiltDlgClose();\n\t\t},\n\n\t\tonFiltDlgClose: function() {\n\t\t\tthis.byId(\"DlgFilterPayslips\").setVisible(false);\n\t\t\tthis.byId(\"DlgFilterPayslips\").close();\n\t\t},\n\n\t\tonClearFilterPayslips: function() {\n\t\t\tthis.oPrevFilter = \"\";\n\t\t\tthis.getView().byId(\"clearFilter\").setVisible(false);\n\t\t\tthis.getPayPeriods([]);\n\t\t\tthis.getFilterDropdowns();\n\t\t},\n\n\t\tonChangeFinYr: function(oEvent) {\n\n\t\t\tvar oSelFinYr = oEvent.getSource().getSelectedKey();\n\n\t\t\tthis.onGetPayDatesForFinyr(oSelFinYr);\n\n\t\t},\n\n\t\tonGetPayDatesForFinyr: function(oSelFinYr) {\n\t\t\tfor (var i = 0; i < this.finYrModel.getData().results.length; i++) {\n\t\t\t\tif (this.finYrModel.getData().results[i].FinYr === oSelFinYr) {\n\t\t\t\t\tvar oPayDatesForSelYr = this.finYrModel.getData().results[i].PayDates;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.onPopulatePayDates(oPayDatesForSelYr, this);\n\t\t},\n\n\t\tonPopulatePayDates: function(oPayDatesForSelYr, that) {\n\t\t\tif (oPayDatesForSelYr.results[0].PayDate) {\n\t\t\t\toPayDatesForSelYr.results.unshift({\n\t\t\t\t\tPayDate: \"\",\n\t\t\t\t\tFinancialYr: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tthat.payDtModel.setData(oPayDatesForSelYr);\n\t\t\tthat.payDtModel.refresh();\n\t\t}\n\n\t});\n\n});",
		"qldh/mypayslips/controller/ErrorHandler.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\"\n], function(UI5Object, MessageBox) {\n\t\"use strict\";\n\n\treturn UI5Object.extend(\"qldh.mypayslips.controller.ErrorHandler\", {\n\n\t\t/**\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t * @class\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t * @public\n\t\t * @alias qldh.mypayslips.controller.ErrorHandler\n\t\t */\n\t\tconstructor: function(oComponent) {\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._oModel = oComponent.getModel();\n\t\t\tthis._bMessageOpen = false;\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t}, this);\n\n\t\t\tthis._oModel.attachRequestFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\n\t\t\t\t\t\t\"Cannot POST\") === 0)) {\n\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showServiceError: function(sDetails) {\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t/*\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);*/\n\t\t\tMessageBox.error(\n\t\t\t\tJSON.parse(sDetails.responseText).error.message.value, {\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\n\t\t}\n\n\t});\n\n});",
		"qldh/mypayslips/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"qldh/mypayslips/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"qldh/mypayslips/model/formatter\"\n], function(BaseController, JSONModel, formatter) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"qldh.mypayslips.controller.Detail\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share in JAM button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\toShareDialog.open();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\t\n\t\t\t//this.getView().byId(\"iconTabBar\").setSelectedKey(\"AmtSummary\");\n\n\t\t\tthis.locModel = new sap.ui.model.json.JSONModel();\n\t\t\tthis.locModel.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay);\n\t\t\tthis.getView().setModel(this.locModel, \"localPSModelDet\");\n\n\t\t\tif (!sap.ui.getCore().AppContext) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!sap.ui.getCore().AppContext.oPayslipInfo) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar oPayslipInfo = sap.ui.getCore().AppContext.oPayslipInfo;\n\n\t\t\tthis.locModel.setData(oPayslipInfo);\n\t\t\tthis.locModel.refresh();\n\n\t\t\tthis.pdfPSUrl = this.getModel().sServiceUrl + \"/PDFPaystubSet(SeqNum='\" + oPayslipInfo.SeqNum + \"',PersAssignNum='\" + oPayslipInfo.PersAssignNum +\n\t\t\t\t\"')/$value\";\n\n\t\t\tthis.getView().byId(\"BtnFullPS\").setVisible(oPayslipInfo.PersAssignNum !== \" \");\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.PersAssignNum,\n\t\t\t\tsObjectName = oObject.PayDate,\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t},\n\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\n\t\tonOpenPSHelp: function() {\n\n\t\t\tvar newWindow = window.open(\"https://streamline.test.health.qld.gov.au/content/help/pay-adv-explained-allstaff.pdf\", \"_blank\");\n\n\t\t\t// set title window\n\t\t\tnewWindow.onload = jQuery.proxy(function() {\n\t\t\t\tthis.setExtWinTitle(newWindow.document, this.getResourceBundle().getText('payslipHelp'));\n\t\t\t}, this);\n\n\t\t},\n\n\t\tonOpenPDF: function() {\n\n\t\t\tif (!this.pdfPSUrl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar newWindow = window.open(this.pdfPSUrl, \"_blank\");\n\n\t\t\t// set title window\n\t\t\tnewWindow.onload = jQuery.proxy(function() {\n\t\t\t\tthis.setExtWinTitle(newWindow.document, this.getResourceBundle().getText('PDFWindowTitle'));\n\t\t\t}, this);\n\n\t\t},\n\n\t\tsetExtWinTitle: function(oDocument, oTitle) {\n\t\t\tvar timer = setTimeout(function() {\n\t\t\t\tvar head = oDocument.createElement(\"head\");\n\t\t\t\toDocument.getElementsByTagName(\"html\")[0].appendChild(head);\n\t\t\t\tvar title = oDocument.createElement(\"title\");\n\t\t\t\ttitle.innerText = oTitle;\n\t\t\t\toDocument.getElementsByTagName(\"head\")[0].appendChild(title);\n\t\t\t\tclearTimeout(timer);\n\t\t\t}, 2000);\n\t\t}\n\n\t});\n\n});",
		"qldh/mypayslips/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/core/routing/History\"\n\t], function (Controller, History) {\n\t\t\"use strict\";\n\n\t\treturn Controller.extend(\"qldh.mypayslips.controller.BaseController\", {\n\t\t\t/**\n\t\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t\t */\n\t\t\tgetRouter : function () {\n\t\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t\t */\n\t\t\tgetModel : function (sName) {\n\t\t\t\treturn this.getView().getModel(sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t\t */\n\t\t\tsetModel : function (oModel, sName) {\n\t\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the resource bundle.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t\t */\n\t\t\tgetResourceBundle : function () {\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for navigating back.\n\t\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"qldh/mypayslips/Component.js": "sap.ui.define([\n\t\t\"sap/ui/core/UIComponent\",\n\t\t\"sap/ui/Device\",\n\t\t\"qldh/mypayslips/model/models\",\n\t\t\"qldh/mypayslips/controller/ListSelector\",\n\t\t\"qldh/mypayslips/controller/ErrorHandler\"\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\n\t\t\"use strict\";\n\n\t\treturn UIComponent.extend(\"qldh.mypayslips.Component\", {\n\n\t\t\tmetadata : {\n\t\t\t\tmanifest : \"json\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t\t * In this method, the FLP and device models are set and the router is initialized.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tinit : function () {\n\t\t\t\tthis.oListSelector = new ListSelector();\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t\t// set the device model\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t\t// set the FLP model\n\t\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\n\t\t\t\t// call the base component's init function and create the App view\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t\t// create the views based on the url/hash\n\t\t\t\tthis.getRouter().initialize();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is destroyed by UI5 automatically.\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tdestroy : function () {\n\t\t\t\tthis.oListSelector.destroy();\n\t\t\t\tthis._oErrorHandler.destroy();\n\t\t\t\t// call the base component's destroy function\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t\t * @public\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t\t */\n\t\t\tgetContentDensityClass : function() {\n\t\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._sContentDensityClass;\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"qldh/mypayslips/view/Detail.view.xml": "<mvc:View controllerName=\"qldh.mypayslips.controller.Detail\" xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\"\n\t\ttitle=\"{parts:[ {path:'i18n>detailTitle'}, {path:'localPSModelDet>/PersAssignNum'} ]}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{parts:[ {path:'i18n>PayDate'}, {path:'localPSModelDet>/PayDate', type:'sap.ui.model.type.Date'} ]}\"\n\t\t\t\tnumber=\"{ path: 'localPSModelDet>/NetPay', formatter: '.formatter.currencyValue' }\" numberUnit=\"{i18n>NetPay}\">\n\t\t\t\t<attributes>\n\t\t\t\t\t<ObjectAttribute title=\"{i18n>PayPeriod}\"\n\t\t\t\t\t\ttext=\"{parts:[ {path:'localPSModelDet>/PayPerBegin', type:'sap.ui.model.type.Date'}, {path:'localPSModelDet>/PayPerEnd', type:'sap.ui.model.type.Date'} ], formatter: '.formatter.formatPayPeriod'}\"\n\t\t\t\t\t\tvisible=\"{ path: 'device>/system/phone', formatter: '.formatter.hideInMobile' }\"/>\n\t\t\t\t</attributes>\n\t\t\t</ObjectHeader>\n\t\t\t<!--\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarSummary\" key=\"AmtSummary\" icon=\"sap-icon://simple-payment\" text=\"{i18n>detailIconTabBarSumm}\">\n\t\t\t\t\t\t<content>-->\n\t\t\t<Table id=\"idPSSummTable\" items=\"{ path: 'localPSModelDet>/AmtSummary/results' }\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Title text=\"{i18n>detailIconTabBarSumm}\" level=\"H2\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column width=\"60%\">\n\t\t\t\t\t\t<Text text=\"{i18n>paymentType}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column width=\"40%\" hAlign=\"Right\">\n\t\t\t\t\t\t<Text text=\"{i18n>Amount}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\ttext=\"{parts:[ {path:'localPSModelDet>SumTypeDesc'}, {path:'localPSModelDet>SumTypeDescShrt'}, {path:'device>/system/phone'} ], formatter: '.formatter.formatAmtDesc'}\"/>\n\t\t\t\t\t\t\t<ObjectIdentifier\n\t\t\t\t\t\t\t\ttext=\"{parts:[ {path:'localPSModelDet>SummEmphasize'}, {path:'localPSModelDet>Amount'} ], formatter: '.formatter.formatText'}\"\n\t\t\t\t\t\t\t\ttitle=\"{parts:[ {path:'localPSModelDet>SummEmphasize'}, {path:'localPSModelDet>Amount'} ], formatter: '.formatter.formatTitle'}\"/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t\t<!--</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarLeave\" key=\"Leave\" icon=\"sap-icon://general-leave-request\" text=\"{i18n>detailIconTabBarLeave}\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Table id=\"idPSLeaveTable\" items=\"{ path: 'localPSModelDet>/Leaves/results' }\">\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column width=\"60%\">\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>leaveType}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column width=\"40%\" hAlign=\"Right\">\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>Balance}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{localPSModelDet>LeaveTypeDesc}\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{ path: 'localPSModelDet>LeaveBalance', formatter: '.formatter.currencyValue' }\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>-->\n\t\t</semantic:content>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button id=\"BtnFullPS\" text=\"{i18n>openPDF}\" tooltip=\"{i18n>openPDFTooltip}\" press=\"onOpenPDF\" type=\"Emphasized\"/>\n\t\t\t<Button text=\"{i18n>payslipHelp}\" tooltip=\"{i18n>openPSHelp}\" press=\"onOpenPSHelp\"/>\n\t\t</semantic:customFooterContent>\n\t\t<semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"qldh/mypayslips/model/formatter.js": "jQuery.sap.require(\"sap.ui.core.format.NumberFormat\");\n\nsap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\t\t/**\n\t\t * Rounds the currency value to 2 digits\n\t\t *\n\t\t * @public\n\t\t * @param {string} sValue value to be formatted\n\t\t * @returns {string} formatted currency value with 2 digits\n\t\t */\n\t\tcurrencyValue: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tvar oNumberFormat = sap.ui.core.format.NumberFormat.getFloatInstance({\n\t\t\t\tmaxFractionDigits: 2,\n\t\t\t\tgroupingEnabled: true,\n\t\t\t\tgroupingSeparator: \",\",\n\t\t\t\tdecimalSeparator: \".\"\n\t\t\t});\n\n\t\t\treturn oNumberFormat.format(sValue);\n\t\t\t//return parseFloat(sValue).toFixed(2);\n\t\t},\n\t\t\n\t\tformatPayPeriod: function(oStartdate, oEnddate) {\n\t\t\treturn oStartdate + \" - \" + oEnddate;\n\t\t},\n\t\t\n\t\t\n\t\thideInMobile: function(oIsMobile) {\n\t\t\treturn !oIsMobile;\n\t\t},\n\t\t\n\t\tformatAmtDesc: function(oDescLong, oDescShort, oIsMobile) {\n\t\t\treturn (oIsMobile) ? oDescShort : oDescLong;\n\t\t},\n\t\t\n\t\tformatTitle: function(oSummEmphasize, oAmount){\n\t\t\treturn (oSummEmphasize) ? this.formatter.currencyValue(oAmount) : null;\n\t\t},\n\t\t\n\t\tformatText: function(oSummEmphasize, oAmount){\n\t\t\treturn (oSummEmphasize) ? null : this.formatter.currencyValue(oAmount);\n\t\t}\n\t\n\t};\n\n});",
		"qldh/mypayslips/model/grouper.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\t/*\n\t\t * Use this file to implement your custom grouping functions\n\t\t * The predefined functions are simple examples and might be replaced by your more complex implementations\n\t\t * to be called with .bind() and handed over to a sap.ui.model.Sorter\n\t\t * return value for all your functions is an object with  key-text pairs\n\t\t * the oContext parameter is not under your control!\n\t\t */\n\n\t\treturn {\n\n\t\t/**\n\t\t * Groups the items by a price in two groups: Lesser equal than 20 and greater than 20\n\t\t * This grouping function needs the resource bundle so we pass it as a dependency\n\t\t * @param oResourceBundle {sap.ui.model.resource.ResourceModel} the resource bundle of your i18n model\n\t\t * @returns {Function} the grouper function you can pass to your sorter\n\t\t */\n\t\tgroupUnitNumber : function (oResourceBundle) {\n\t\t\treturn function (oContext) {\n\t\t\t\tvar iPrice = oContext.getProperty(\"NetPay\"),\n\t\t\t\t\tsKey,\n\t\t\t\t\tsText;\n\n\t\t\t\t\tif (iPrice <= 20) {\n\t\t\t\t\t\tsKey = \"LE20\";\n\t\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header1\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsKey = \"GT20\";\n\t\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header2\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: sKey,\n\t\t\t\t\t\ttext: sText\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t};\n\t}\n);",
		"qldh/mypayslips/model/GroupSortState.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/ui/model/Sorter\"\n\t], function (BaseObject, Sorter) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"qldh.mypayslips.model.GroupSortState\", {\n\n\t\t/**\n\t\t * Creates sorters and groupers for the master list.\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\n\t\t * @class\n\t\t * @public\n\t\t * @param {sap.ui.model.json.JSONModel} oViewModel the model of the current view\n\t\t * @param {function} fnGroupFunction the grouping function to be applied\n\t\t * @alias qldh.mypayslips.model.GroupSortState\n\t\t */\n\t\tconstructor: function (oViewModel, fnGroupFunction) {\n\t\t\tthis._oViewModel = oViewModel;\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\n\t\t},\n\n\t\t/**\n\t\t * Sorts by PayDate, or by NetPay\n\t\t *\n\t\t * @param {string} sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tsort: function (sKey) {\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\n\n\t\t\tif (sGroupedBy !== \"None\") {\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\n\t\t\t}\n\n\t\t\treturn [new Sorter(sKey, false)];\n\t\t},\n\n\t\t/**\n\t\t * Groups by NetPay, or resets the grouping for the key \"None\"\n\t\t *\n\t\t * @param {string} sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tgroup: function (sKey) {\n\t\t\tvar aSorters = [];\n\n\t\t\tif (sKey === \"NetPay\") {\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"NetPay\");\n\n\t\t\t\taSorters.push(\n\t\t\t\t\tnew Sorter(\"NetPay\", false,\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\n\t\t\t\t);\n\t\t\t} else if (sKey === \"None\") {\n\t\t\t\t// select the default sorting again\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"PayDate\");\n\t\t\t}\n\n\t\t\treturn aSorters;\n\t\t}\n\n\t});\n});",
		"qldh/mypayslips/controller/App.controller.js": "sap.ui.define([\n\t\t\"qldh/mypayslips/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (BaseController, JSONModel) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"qldh.mypayslips.controller.App\", {\n\n\t\t\tonInit : function () {\n\t\t\t\tvar oViewModel,\n\t\t\t\t\tfnSetAppNotBusy,\n\t\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t};\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t\t// after a new list entry has been selected.\n\t\t\t\toListSelector.attachListSelectionChange(function () {\n\t\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t\t}, this);\n\n\t\t\t\t// apply content density mode to root view\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"qldh/mypayslips/view/DetailNoObjectsAvailable.view.xml": "<mvc:View\n\tcontrollerName=\"qldh.mypayslips.controller.BaseController\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\tid=\"page\"\n\t\ttitle=\"{i18n>notAvailableViewTitle}\"\n\t\ttext=\"{i18n>noObjectsAvailableText}\"\n\t\ticon=\"{sap-icon://product}\"\n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"qldh/mypayslips/controller/ListSelector.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\"\n\t], function (BaseObject) {\n\t\t\"use strict\";\n\n\t\treturn BaseObject.extend(\"qldh.mypayslips.model.ListSelector\", {\n\n\t\t\t/**\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t\t * function.\n\t\t\t * @class\n\t\t\t * @public\n\t\t\t * @alias qldh.mypayslips.model.ListSelector\n\t\t\t */\n\n\t\t\tconstructor : function () {\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t\t}.bind(this));\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t\t.then(function (oList) {\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\t\tfunction (oData) {\n\t\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\tfirstListitem : oFirstListItem\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t\t * May only be invoked once per ListSelector instance.\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t\t * @public\n\t\t\t */\n\t\t\tsetBoundMasterList : function (oList) {\n\t\t\t\tthis._oList = oList;\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t\t * no selection/scrolling will happen\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t\t * @public\n\t\t\t */\n\t\t\tselectAListItem : function (sBindingPath) {\n\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/* =========================================================== */\n\t\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {qldh.mypayslips.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tattachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {qldh.mypayslips.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tdetachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Removes all selections from master list.\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t\t * @public\n\t\t\t */\n\t\t\tclearMasterListSelection : function () {\n\t\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"qldh/mypayslips/view/NotFound.view.xml": "<mvc:View\n\tcontrollerName=\"qldh.mypayslips.controller.BaseController\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\tid=\"page\"\n\t\ttitle=\"{i18n>notFoundTitle}\"\n\t\ttext=\"{i18n>notFoundText}\"\n\t\ticon=\"{sap-icon://document}\"\n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"qldh/mypayslips/view/DetailObjectNotFound.view.xml": "<mvc:View\n\tcontrollerName=\"qldh.mypayslips.controller.BaseController\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\tid=\"page\"\n\t\ttitle=\"{i18n>detailTitle}\"\n\t\ttext=\"{i18n>noObjectFoundText}\"\n\t\ticon=\"{sap-icon://product}\"\n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"qldh/mypayslips/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\n\t<ViewSettingsDialog\n\t\tid=\"viewSettingsDialog\"\n\t\tconfirm=\"onConfirmViewSettingsDialog\"\n\t\tresetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem\n\t\t\t\tid=\"filterItems\"\n\t\t\t\ttext=\"{i18n>masterFilterName}\"\n\t\t\t\tkey=\"Price\"\n\t\t\t\tmultiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\ttext=\"{i18n>masterFilter1}\"\n\t\t\t\t\t\tkey=\"Filter1\"\n\t\t\t\t\t\tid=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\ttext=\"{i18n>masterFilter2}\"\n\t\t\t\t\t\tkey=\"Filter2\"\n\t\t\t\t\t\tid=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n\n</core:FragmentDefinition>",
		"qldh/mypayslips/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t},\n\n\t\t\tcreateFLPModel : function () {\n\t\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\n\t\t\t\t\toModel = new JSONModel({\n\t\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t\t});\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"qldh/mypayslips/view/App.view.xml": "<mvc:View\n\tcontrollerName=\"qldh.mypayslips.controller.App\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tdisplayBlock=\"true\"\n\tbusy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\"\n\txmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\" />\n</mvc:View>",
		"qldh/mypayslips/localService/mockserver.js": "sap.ui.define([\n\t\t\"sap/ui/core/util/MockServer\"\n\t], function (MockServer) {\n\t\t\"use strict\";\n\n\t\tvar oMockServer,\n\t\t\t_sAppModulePath = \"qldh/mypayslips/\",\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Initializes the mock server.\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t\t * @public\n\t\t\t */\n\n\t\t\tinit : function () {\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\t\tsEntity = \"PayPeriodsSet\",\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t\t// ensure there is a trailing slash\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\t\toMockServer = new MockServer({\n\t\t\t\t\trootUri : sMockServerUrl\n\t\t\t\t});\n\n\t\t\t\t// configure mock server with a delay of 1s\n\t\t\t\tMockServer.config({\n\t\t\t\t\tautoRespond : true,\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t\t});\n\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\n\t\t\t\t\tbGenerateMissingMockData : true\n\t\t\t\t});\n\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\n\t\t\t\t\t\taRequest.response = function(oXhr){\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t// handling the metadata error test\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handling request errors\n\t\t\t\tif (sErrorParam) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toMockServer.start();\n\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t\t */\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn oMockServer;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"qldh/mypayslips/view/Master.view.xml": "<mvc:View controllerName=\"qldh.mypayslips.controller.Master\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\" xmlns:f=\"sap.ui.layout.form\">\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\n\t\t<!--<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\" visible=\"false\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\"\n\t\t\t\t\t\tsearch=\"onSearch\"></SearchField>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>-->\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" items=\"{ path: 'localPSModel>/results' }\" busyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"false\" growingScrollToLoad=\"false\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\"\n\t\t\t\t\t\tintro=\"PAN: {localPSModel>PersAssignNum}\"\n\t\t\t\t\t\ttitle=\"{path:'localPSModel>PayDate', type:'sap.ui.model.type.Date'}\"\n\t\t\t\t\t\tnumber=\"{ path: 'localPSModel>NetPay', formatter: '.formatter.currencyValue' }\" numberUnit=\"{i18n>NetPay}\">\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"{parts:[ {path:'localPSModel>PayPerBegin', type:'sap.ui.model.type.Date'}, {path:'localPSModel>PayPerEnd', type:'sap.ui.model.type.Date'} ], formatter: '.formatter.formatPayPeriod'}\"\n\t\t\t\t\t\t\t                 visible=\"{ path: 'device>/system/phone', formatter: '.formatter.hideInMobile' }\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t<semantic:sort >\n\t\t\t<semantic:SortSelect id=\"sort\" selectedKey=\"{masterView>/sortBy}\" change=\"onSort\" visible=\"false\">\n\t\t\t\t<core:Item id=\"masterSort1\" key=\"PayDate\" text=\"{i18n>masterSort1}\"/>\n\t\t\t\t<core:Item id=\"masterSort2\" key=\"NetPay\" text=\"{i18n>masterSort2}\"/>\n\t\t\t</semantic:SortSelect>\n\t\t</semantic:sort>\n\t\t<semantic:filter>\n\t\t\t<semantic:FilterAction id=\"filter\" press=\"onOpenFilterPayslips\"/>\n\t\t</semantic:filter>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button id=\"clearFilter\" icon=\"sap-icon://clear-filter\" tooltip=\"{i18n>clearFilterPayslips}\" press=\"onClearFilterPayslips\" visible=\"false\" />\n\t\t</semantic:customFooterContent>\n\t\t<semantic:group>\n\t\t\t<semantic:GroupSelect id=\"group\" selectedKey=\"{masterView>/groupBy}\" change=\"onGroup\" visible=\"false\">\n\t\t\t\t<core:Item id=\"masterGroupNone\" key=\"None\" text=\"{i18n>masterGroupNone}\"/>\n\t\t\t\t<core:Item id=\"masterGroup1\" key=\"NetPay\" text=\"{i18n>masterGroup1}\"/>\n\t\t\t</semantic:GroupSelect>\n\t\t</semantic:group>\n\t\t\n\t\t<Dialog id=\"DlgFilterPayslips\" title=\"{i18n>filterPayslips}\" verticalScrolling=\"false\" horizontalScrolling=\"false\" visible=\"false\">\n\t\t\t<content>\n\t\t\t\t<f:SimpleForm editable=\"false\" layout=\"ResponsiveGridLayout\">\n\t\t\t\t\t<f:content>\n\t\t\t\t\t\t<Label text=\"{i18n>FilterPAN}\" />\n\t\t\t\t\t\t<Select id=\"PAN\" items=\"{ path: 'localPanModel>/results' }\">\n\t\t\t\t\t\t\t<core:Item key=\"{localPanModel>PersAssignNum}\" text=\"{localPanModel>PersAssignNum}\"/>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t<Label text=\"{i18n>FinancialYr}\" />\n\t\t\t\t\t\t<Select id=\"FinancialYr\"  items=\"{ path: 'localFinYrModel>/results' }\" change=\"onChangeFinYr\">\n\t\t\t\t\t\t\t<core:Item key=\"{localFinYrModel>FinYr}\" text=\"{localFinYrModel>FinYr}\"/>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t<Label text=\"{i18n>PayDt}\"/>\n\t\t\t\t\t\t<Select id=\"PayDate\"  items=\"{ path: 'localPayDtModel>/results' }\">\n\t\t\t\t\t\t\t<core:Item key=\"{localPayDtModel>PayDate}\" text=\"{path:'localPayDtModel>PayDate', type:'sap.ui.model.type.Date'}\"/>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</f:content>\n\t\t\t\t</f:SimpleForm>\n\t\t\t</content>\n\t\t\t<buttons>\n\t\t\t\t<Button text=\"{i18n>OK}\" press=\"onFiltOk\" type=\"Emphasized\"/>\n\t\t\t\t<Button text=\"{i18n>Cancel}\" press=\"onFiltCancel\"/>\n\t\t\t</buttons>\n\t\t</Dialog>\n\t\t\n\t</semantic:MasterPage>\n</mvc:View>"
	}
});